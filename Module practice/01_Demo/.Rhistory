1+1
?print
??print
install.packages(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github("trinker/gmailR")
library(gmailR)
devtools::install_github("trinker/gmailR")
library(gmailR)
library(help=gmailR)
?gmail
export(cell2email)
export(gmail)
export(scrape.cell)
import(XML)
import(rJava)
import(rJython)
import(rjson)
install_github("gmailR", "trinker")
install.packages("C:/Users/alexf/Downloads/trinker-gmailR-abb0ea5.zip", repos = NULL, type = "win.binary")
install.packages("DescToolsAddIns")
library(DescToolsAddIns)
library(tidyr)
library(tidyselect)
library(tidyverse)
library(ggplot2)
library(ggsignif)
library(jsonlite)
library(rjson)
detach("package:rjson", unload = TRUE)
detach("package:jsonlite", unload = TRUE)
library(jsonlite)
setwd("C:/Users/alexf/Desktop/Bootcamp/R_Analysis")
setwd("C:/Users/alexf/Desktop/Bootcamp/R_Analysis/01_Demo")
x <- 3
numlist <- c(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
?read.csv()
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
View(demo_table)
View(demo_table)
library(jsonlite)
install.packages(ggpubr)
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
install.packages("ggpubr")
library("ggpubr")
library("ggpubr")
library(ggpubr)
install.packages(c("tidyr", "tidyselect", "tidyverse", "vctrs"))
library(tibble)
library(tidyr)
library(tidyselect)
library(ggplot2)
library(descriptr)
library(tools, lib.loc = "C:/Program Files/R/R-3.5.1/library")
library(tidyr)
library(jsonlite)
library(ggplot2)
install.packages("lifecycle")
library(jsonlite)
library(tidyr)
library(ggplot2)
library(jsonlite)
library(tidyverse)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
demo_table2 <- fromJSON(txt='demo.json')
View(demo_table2)
demo_table[3,"Year"]
demo_table[3,3]
library(jsonlite)
library(ggplot2)
demo_table$"Vehicle_Class"
# Once we have selected the single vector, we can use
# bracket notation to select a single value.
demo_table$"Vehicle_Class"[2]
filter_table <- demo_table2[demo_table2$price > 10000,]
View(filter_table)
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status)
filter_table3 <- demo_table2[("clean" %in% demo_table2$title_status) & (demo_table2$price > 10000) & (demo_table2$drive == "4wd"),]
# sampling
sample(c("cow", "deer", "pig", "chicken", "duck", "sheep", "dog"), 4)
#1)  Create a numerical vector that is the same length as the number of rows in the data frame using the colon (:) operator.
num_rows <- 1:nrow(demo_table)
#2) Use the sample() function to sample a list of indices from our first vector.
sample_rows <- sample(num_rows, 3)
#3) Use bracket notation to retrieve data frame rows from sample list.
demo_table[sample_rows,]
#1-3) in one line
demo_table[sample(1:nrow(demo_table), 3),]
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
